strict digraph deps {
"marvin" [style=dashed];
{rank=max; "rts" [shape=box]; };
"Cabal" -> "array";
"Cabal" -> "base";
"Cabal" -> "binary";
"Cabal" -> "bytestring";
"Cabal" -> "containers";
"Cabal" -> "deepseq";
"Cabal" -> "directory";
"Cabal" -> "filepath";
"Cabal" -> "mtl";
"Cabal" -> "parsec";
"Cabal" -> "pretty";
"Cabal" -> "process";
"Cabal" -> "text";
"Cabal" -> "time";
"Cabal" -> "transformers";
"Cabal" -> "unix";
"RSA" -> "SHA";
"RSA" -> "base";
"RSA" -> "binary";
"RSA" -> "bytestring";
"RSA" -> "crypto-api";
"RSA" -> "crypto-pubkey-types";
"SHA" -> "array";
"SHA" -> "base";
"SHA" -> "binary";
"SHA" -> "bytestring";
"StateVar" -> "base";
"StateVar" -> "stm";
"StateVar" -> "transformers";
"adjunctions" -> "array";
"adjunctions" -> "base";
"adjunctions" -> "comonad";
"adjunctions" -> "containers";
"adjunctions" -> "contravariant";
"adjunctions" -> "distributive";
"adjunctions" -> "free";
"adjunctions" -> "mtl";
"adjunctions" -> "profunctors";
"adjunctions" -> "semigroupoids";
"adjunctions" -> "semigroups";
"adjunctions" -> "tagged";
"adjunctions" -> "transformers";
"adjunctions" -> "transformers-compat";
"adjunctions" -> "void";
"aeson" -> "attoparsec";
"aeson" -> "base";
"aeson" -> "base-compat-batteries";
"aeson" -> "bytestring";
"aeson" -> "containers";
"aeson" -> "deepseq";
"aeson" -> "dlist";
"aeson" -> "ghc-prim";
"aeson" -> "hashable";
"aeson" -> "primitive";
"aeson" -> "scientific";
"aeson" -> "tagged";
"aeson" -> "template-haskell";
"aeson" -> "text";
"aeson" -> "th-abstraction";
"aeson" -> "time";
"aeson" -> "time-compat";
"aeson" -> "unordered-containers";
"aeson" -> "uuid-types";
"aeson" -> "vector";
"ansi-terminal" -> "base";
"ansi-terminal" -> "colour";
"ansi-wl-pprint" -> "ansi-terminal";
"ansi-wl-pprint" -> "base";
"appar" -> "base";
"appar" -> "bytestring";
"array" -> "base";
"asn1-encoding" -> "asn1-types";
"asn1-encoding" -> "base";
"asn1-encoding" -> "bytestring";
"asn1-encoding" -> "hourglass";
"asn1-parse" -> "asn1-encoding";
"asn1-parse" -> "asn1-types";
"asn1-parse" -> "base";
"asn1-parse" -> "bytestring";
"asn1-types" -> "base";
"asn1-types" -> "bytestring";
"asn1-types" -> "hourglass";
"asn1-types" -> "memory";
"async" -> "base";
"async" -> "hashable";
"async" -> "stm";
"attoparsec" -> "array";
"attoparsec" -> "base";
"attoparsec" -> "bytestring";
"attoparsec" -> "containers";
"attoparsec" -> "deepseq";
"attoparsec" -> "scientific";
"attoparsec" -> "text";
"attoparsec" -> "transformers";
"authenticate-oauth" -> "RSA";
"authenticate-oauth" -> "SHA";
"authenticate-oauth" -> "base";
"authenticate-oauth" -> "base64-bytestring";
"authenticate-oauth" -> "blaze-builder";
"authenticate-oauth" -> "bytestring";
"authenticate-oauth" -> "crypto-pubkey-types";
"authenticate-oauth" -> "data-default";
"authenticate-oauth" -> "http-client";
"authenticate-oauth" -> "http-types";
"authenticate-oauth" -> "random";
"authenticate-oauth" -> "time";
"authenticate-oauth" -> "transformers";
"authenticate-oauth" -> "transformers-compat";
"auto-update" -> "base";
"base" -> "ghc-prim";
"base" -> "integer-gmp";
"base" -> "rts";
"base-compat" -> "base";
"base-compat" -> "unix";
"base-compat-batteries" -> "base";
"base-compat-batteries" -> "base-compat";
"base-orphans" -> "base";
"base-orphans" -> "ghc-prim";
"base16-bytestring" -> "base";
"base16-bytestring" -> "bytestring";
"base16-bytestring" -> "ghc-prim";
"base64-bytestring" -> "base";
"base64-bytestring" -> "bytestring";
"basement" -> "base";
"basement" -> "ghc-prim";
"bifunctors" -> "base";
"bifunctors" -> "base-orphans";
"bifunctors" -> "comonad";
"bifunctors" -> "containers";
"bifunctors" -> "tagged";
"bifunctors" -> "template-haskell";
"bifunctors" -> "th-abstraction";
"bifunctors" -> "transformers";
"binary" -> "array";
"binary" -> "base";
"binary" -> "bytestring";
"binary" -> "containers";
"blaze-builder" -> "base";
"blaze-builder" -> "bytestring";
"blaze-builder" -> "deepseq";
"blaze-builder" -> "text";
"bsb-http-chunked" -> "base";
"bsb-http-chunked" -> "bytestring";
"byteorder" -> "base";
"bytestring" -> "base";
"bytestring" -> "deepseq";
"bytestring" -> "ghc-prim";
"bytestring" -> "integer-gmp";
"bytestring-builder" -> "base";
"bytestring-builder" -> "bytestring";
"bytestring-builder" -> "deepseq";
"cabal-doctest" -> "Cabal";
"cabal-doctest" -> "base";
"cabal-doctest" -> "directory";
"cabal-doctest" -> "filepath";
"call-stack" -> "base";
"case-insensitive" -> "base";
"case-insensitive" -> "bytestring";
"case-insensitive" -> "deepseq";
"case-insensitive" -> "hashable";
"case-insensitive" -> "text";
"cereal" -> "array";
"cereal" -> "base";
"cereal" -> "bytestring";
"cereal" -> "containers";
"cereal" -> "ghc-prim";
"clock" -> "base";
"cmdargs" -> "base";
"cmdargs" -> "filepath";
"cmdargs" -> "process";
"cmdargs" -> "template-haskell";
"cmdargs" -> "transformers";
"colour" -> "base";
"comonad" -> "Cabal";
"comonad" -> "base";
"comonad" -> "cabal-doctest";
"comonad" -> "containers";
"comonad" -> "distributive";
"comonad" -> "tagged";
"comonad" -> "transformers";
"comonad" -> "transformers-compat";
"conduit" -> "base";
"conduit" -> "bytestring";
"conduit" -> "directory";
"conduit" -> "exceptions";
"conduit" -> "filepath";
"conduit" -> "mono-traversable";
"conduit" -> "mtl";
"conduit" -> "primitive";
"conduit" -> "resourcet";
"conduit" -> "text";
"conduit" -> "transformers";
"conduit" -> "unix";
"conduit" -> "unliftio-core";
"conduit" -> "vector";
"conduit-extra" -> "async";
"conduit-extra" -> "attoparsec";
"conduit-extra" -> "base";
"conduit-extra" -> "bytestring";
"conduit-extra" -> "conduit";
"conduit-extra" -> "directory";
"conduit-extra" -> "filepath";
"conduit-extra" -> "network";
"conduit-extra" -> "primitive";
"conduit-extra" -> "process";
"conduit-extra" -> "resourcet";
"conduit-extra" -> "stm";
"conduit-extra" -> "streaming-commons";
"conduit-extra" -> "text";
"conduit-extra" -> "transformers";
"conduit-extra" -> "typed-process";
"conduit-extra" -> "unliftio-core";
"configurator" -> "attoparsec";
"configurator" -> "base";
"configurator" -> "bytestring";
"configurator" -> "directory";
"configurator" -> "hashable";
"configurator" -> "text";
"configurator" -> "unix-compat";
"configurator" -> "unordered-containers";
"connection" -> "base";
"connection" -> "basement";
"connection" -> "bytestring";
"connection" -> "containers";
"connection" -> "data-default-class";
"connection" -> "network";
"connection" -> "socks";
"connection" -> "tls";
"connection" -> "x509";
"connection" -> "x509-store";
"connection" -> "x509-system";
"connection" -> "x509-validation";
"constraints" -> "base";
"constraints" -> "binary";
"constraints" -> "deepseq";
"constraints" -> "ghc-prim";
"constraints" -> "hashable";
"constraints" -> "mtl";
"constraints" -> "semigroups";
"constraints" -> "transformers";
"constraints" -> "transformers-compat";
"constraints" -> "type-equality";
"containers" -> "array";
"containers" -> "base";
"containers" -> "deepseq";
"contravariant" -> "StateVar";
"contravariant" -> "base";
"contravariant" -> "transformers";
"cookie" -> "base";
"cookie" -> "bytestring";
"cookie" -> "data-default-class";
"cookie" -> "deepseq";
"cookie" -> "text";
"cookie" -> "time";
"crypto-api" -> "base";
"crypto-api" -> "bytestring";
"crypto-api" -> "cereal";
"crypto-api" -> "entropy";
"crypto-api" -> "tagged";
"crypto-api" -> "transformers";
"crypto-pubkey-types" -> "asn1-encoding";
"crypto-pubkey-types" -> "asn1-types";
"crypto-pubkey-types" -> "base";
"cryptonite" -> "base";
"cryptonite" -> "basement";
"cryptonite" -> "bytestring";
"cryptonite" -> "deepseq";
"cryptonite" -> "ghc-prim";
"cryptonite" -> "integer-gmp";
"cryptonite" -> "memory";
"data-default" -> "base";
"data-default" -> "data-default-class";
"data-default" -> "data-default-instances-containers";
"data-default" -> "data-default-instances-dlist";
"data-default" -> "data-default-instances-old-locale";
"data-default-class" -> "base";
"data-default-instances-containers" -> "base";
"data-default-instances-containers" -> "containers";
"data-default-instances-containers" -> "data-default-class";
"data-default-instances-dlist" -> "base";
"data-default-instances-dlist" -> "data-default-class";
"data-default-instances-dlist" -> "dlist";
"data-default-instances-old-locale" -> "base";
"data-default-instances-old-locale" -> "data-default-class";
"data-default-instances-old-locale" -> "old-locale";
"deepseq" -> "array";
"deepseq" -> "base";
"directory" -> "base";
"directory" -> "filepath";
"directory" -> "time";
"directory" -> "unix";
"distributive" -> "Cabal";
"distributive" -> "base";
"distributive" -> "base-orphans";
"distributive" -> "cabal-doctest";
"distributive" -> "tagged";
"distributive" -> "transformers";
"dlist" -> "base";
"dlist" -> "deepseq";
"easy-file" -> "base";
"easy-file" -> "directory";
"easy-file" -> "filepath";
"easy-file" -> "time";
"easy-file" -> "unix";
"either" -> "base";
"either" -> "bifunctors";
"either" -> "mtl";
"either" -> "profunctors";
"either" -> "semigroupoids";
"entropy" -> "Cabal";
"entropy" -> "base";
"entropy" -> "bytestring";
"entropy" -> "directory";
"entropy" -> "filepath";
"entropy" -> "process";
"entropy" -> "unix";
"exceptions" -> "base";
"exceptions" -> "mtl";
"exceptions" -> "stm";
"exceptions" -> "template-haskell";
"exceptions" -> "transformers";
"fast-logger" -> "array";
"fast-logger" -> "auto-update";
"fast-logger" -> "base";
"fast-logger" -> "bytestring";
"fast-logger" -> "directory";
"fast-logger" -> "easy-file";
"fast-logger" -> "filepath";
"fast-logger" -> "text";
"fast-logger" -> "unix-compat";
"fast-logger" -> "unix-time";
"filepath" -> "base";
"free" -> "base";
"free" -> "comonad";
"free" -> "containers";
"free" -> "distributive";
"free" -> "exceptions";
"free" -> "mtl";
"free" -> "profunctors";
"free" -> "semigroupoids";
"free" -> "template-haskell";
"free" -> "transformers";
"free" -> "transformers-base";
"ghc-boot-th" -> "base";
"ghc-prim" -> "rts";
"happy" -> "array";
"happy" -> "base";
"happy" -> "containers";
"happy" -> "mtl";
"hashable" -> "base";
"hashable" -> "bytestring";
"hashable" -> "deepseq";
"hashable" -> "ghc-prim";
"hashable" -> "integer-gmp";
"hashable" -> "text";
"haskeline" -> "base";
"haskeline" -> "bytestring";
"haskeline" -> "containers";
"haskeline" -> "directory";
"haskeline" -> "filepath";
"haskeline" -> "process";
"haskeline" -> "stm";
"haskeline" -> "terminfo";
"haskeline" -> "transformers";
"haskeline" -> "unix";
"haskell-src-exts" -> "array";
"haskell-src-exts" -> "base";
"haskell-src-exts" -> "ghc-prim";
"haskell-src-exts" -> "happy";
"haskell-src-exts" -> "pretty";
"haskell-src-meta" -> "base";
"haskell-src-meta" -> "haskell-src-exts";
"haskell-src-meta" -> "pretty";
"haskell-src-meta" -> "syb";
"haskell-src-meta" -> "template-haskell";
"haskell-src-meta" -> "th-orphans";
"hourglass" -> "base";
"hourglass" -> "deepseq";
"http-client" -> "array";
"http-client" -> "base";
"http-client" -> "blaze-builder";
"http-client" -> "bytestring";
"http-client" -> "case-insensitive";
"http-client" -> "containers";
"http-client" -> "cookie";
"http-client" -> "deepseq";
"http-client" -> "exceptions";
"http-client" -> "filepath";
"http-client" -> "ghc-prim";
"http-client" -> "http-types";
"http-client" -> "memory";
"http-client" -> "mime-types";
"http-client" -> "network";
"http-client" -> "network-uri";
"http-client" -> "random";
"http-client" -> "stm";
"http-client" -> "streaming-commons";
"http-client" -> "text";
"http-client" -> "time";
"http-client" -> "transformers";
"http-client-tls" -> "base";
"http-client-tls" -> "bytestring";
"http-client-tls" -> "case-insensitive";
"http-client-tls" -> "connection";
"http-client-tls" -> "containers";
"http-client-tls" -> "cryptonite";
"http-client-tls" -> "data-default-class";
"http-client-tls" -> "exceptions";
"http-client-tls" -> "http-client";
"http-client-tls" -> "http-types";
"http-client-tls" -> "memory";
"http-client-tls" -> "network";
"http-client-tls" -> "network-uri";
"http-client-tls" -> "text";
"http-client-tls" -> "tls";
"http-client-tls" -> "transformers";
"http-date" -> "array";
"http-date" -> "attoparsec";
"http-date" -> "base";
"http-date" -> "bytestring";
"http-date" -> "time";
"http-types" -> "array";
"http-types" -> "base";
"http-types" -> "bytestring";
"http-types" -> "case-insensitive";
"http-types" -> "text";
"http2" -> "array";
"http2" -> "base";
"http2" -> "bytestring";
"http2" -> "case-insensitive";
"http2" -> "containers";
"http2" -> "http-types";
"http2" -> "network";
"http2" -> "network-byte-order";
"http2" -> "psqueues";
"http2" -> "stm";
"http2" -> "time-manager";
"integer-gmp" -> "ghc-prim";
"integer-logarithms" -> "array";
"integer-logarithms" -> "base";
"integer-logarithms" -> "ghc-prim";
"integer-logarithms" -> "integer-gmp";
"invariant" -> "StateVar";
"invariant" -> "array";
"invariant" -> "base";
"invariant" -> "bifunctors";
"invariant" -> "comonad";
"invariant" -> "containers";
"invariant" -> "contravariant";
"invariant" -> "ghc-prim";
"invariant" -> "profunctors";
"invariant" -> "stm";
"invariant" -> "tagged";
"invariant" -> "template-haskell";
"invariant" -> "th-abstraction";
"invariant" -> "transformers";
"invariant" -> "transformers-compat";
"invariant" -> "unordered-containers";
"iproute" -> "appar";
"iproute" -> "base";
"iproute" -> "byteorder";
"iproute" -> "bytestring";
"iproute" -> "containers";
"iproute" -> "network";
"irc" -> "attoparsec";
"irc" -> "base";
"irc" -> "bytestring";
"irc-conduit" -> "async";
"irc-conduit" -> "base";
"irc-conduit" -> "bytestring";
"irc-conduit" -> "conduit";
"irc-conduit" -> "conduit-extra";
"irc-conduit" -> "connection";
"irc-conduit" -> "irc";
"irc-conduit" -> "irc-ctcp";
"irc-conduit" -> "network-conduit-tls";
"irc-conduit" -> "profunctors";
"irc-conduit" -> "text";
"irc-conduit" -> "time";
"irc-conduit" -> "tls";
"irc-conduit" -> "transformers";
"irc-conduit" -> "x509-validation";
"irc-ctcp" -> "base";
"irc-ctcp" -> "bytestring";
"irc-ctcp" -> "text";
"kan-extensions" -> "adjunctions";
"kan-extensions" -> "array";
"kan-extensions" -> "base";
"kan-extensions" -> "comonad";
"kan-extensions" -> "containers";
"kan-extensions" -> "contravariant";
"kan-extensions" -> "distributive";
"kan-extensions" -> "free";
"kan-extensions" -> "invariant";
"kan-extensions" -> "mtl";
"kan-extensions" -> "profunctors";
"kan-extensions" -> "semigroupoids";
"kan-extensions" -> "tagged";
"kan-extensions" -> "transformers";
"kan-extensions" -> "transformers-compat";
"lens" -> "Cabal";
"lens" -> "array";
"lens" -> "base";
"lens" -> "base-orphans";
"lens" -> "bifunctors";
"lens" -> "bytestring";
"lens" -> "cabal-doctest";
"lens" -> "call-stack";
"lens" -> "comonad";
"lens" -> "containers";
"lens" -> "contravariant";
"lens" -> "distributive";
"lens" -> "exceptions";
"lens" -> "filepath";
"lens" -> "free";
"lens" -> "ghc-prim";
"lens" -> "hashable";
"lens" -> "kan-extensions";
"lens" -> "mtl";
"lens" -> "parallel";
"lens" -> "profunctors";
"lens" -> "reflection";
"lens" -> "semigroupoids";
"lens" -> "tagged";
"lens" -> "template-haskell";
"lens" -> "text";
"lens" -> "th-abstraction";
"lens" -> "transformers";
"lens" -> "transformers-compat";
"lens" -> "type-equality";
"lens" -> "unordered-containers";
"lens" -> "vector";
"lens-aeson" -> "Cabal";
"lens-aeson" -> "aeson";
"lens-aeson" -> "attoparsec";
"lens-aeson" -> "base";
"lens-aeson" -> "bytestring";
"lens-aeson" -> "cabal-doctest";
"lens-aeson" -> "lens";
"lens-aeson" -> "scientific";
"lens-aeson" -> "text";
"lens-aeson" -> "unordered-containers";
"lens-aeson" -> "vector";
"libyaml" -> "base";
"libyaml" -> "bytestring";
"libyaml" -> "conduit";
"libyaml" -> "resourcet";
"lifted-async" -> "async";
"lifted-async" -> "base";
"lifted-async" -> "constraints";
"lifted-async" -> "lifted-base";
"lifted-async" -> "monad-control";
"lifted-async" -> "transformers-base";
"lifted-base" -> "base";
"lifted-base" -> "monad-control";
"lifted-base" -> "transformers-base";
"marvin" -> "aeson";
"marvin" -> "ansi-wl-pprint";
"marvin" -> "base";
"marvin" -> "bytestring";
"marvin" -> "conduit";
"marvin" -> "configurator";
"marvin" -> "deepseq";
"marvin" -> "directory";
"marvin" -> "filepath";
"marvin" -> "hashable";
"marvin" -> "haskeline";
"marvin" -> "http-client";
"marvin" -> "http-client-tls";
"marvin" -> "http-types";
"marvin" -> "irc-conduit";
"marvin" -> "lifted-async";
"marvin" -> "lifted-base";
"marvin" -> "marvin-interpolate";
"marvin" -> "microlens-platform";
"marvin" -> "monad-control";
"marvin" -> "monad-logger";
"marvin" -> "monad-loops";
"marvin" -> "mtl";
"marvin" -> "mustache";
"marvin" -> "network-uri";
"marvin" -> "optparse-applicative";
"marvin" -> "random";
"marvin" -> "text";
"marvin" -> "text-icu";
"marvin" -> "time";
"marvin" -> "transformers";
"marvin" -> "transformers-base";
"marvin" -> "unordered-containers";
"marvin" -> "vector";
"marvin" -> "wai";
"marvin" -> "warp";
"marvin" -> "warp-tls";
"marvin" -> "websockets";
"marvin" -> "wreq";
"marvin" -> "wuss";
"marvin-interpolate" -> "base";
"marvin-interpolate" -> "haskell-src-meta";
"marvin-interpolate" -> "mtl";
"marvin-interpolate" -> "parsec";
"marvin-interpolate" -> "template-haskell";
"marvin-interpolate" -> "text";
"memory" -> "base";
"memory" -> "basement";
"memory" -> "bytestring";
"memory" -> "deepseq";
"memory" -> "ghc-prim";
"microlens" -> "base";
"microlens-ghc" -> "array";
"microlens-ghc" -> "base";
"microlens-ghc" -> "bytestring";
"microlens-ghc" -> "containers";
"microlens-ghc" -> "microlens";
"microlens-ghc" -> "transformers";
"microlens-mtl" -> "base";
"microlens-mtl" -> "microlens";
"microlens-mtl" -> "mtl";
"microlens-mtl" -> "transformers";
"microlens-mtl" -> "transformers-compat";
"microlens-platform" -> "base";
"microlens-platform" -> "hashable";
"microlens-platform" -> "microlens";
"microlens-platform" -> "microlens-ghc";
"microlens-platform" -> "microlens-mtl";
"microlens-platform" -> "microlens-th";
"microlens-platform" -> "text";
"microlens-platform" -> "unordered-containers";
"microlens-platform" -> "vector";
"microlens-th" -> "base";
"microlens-th" -> "containers";
"microlens-th" -> "microlens";
"microlens-th" -> "template-haskell";
"microlens-th" -> "th-abstraction";
"microlens-th" -> "transformers";
"mime-types" -> "base";
"mime-types" -> "bytestring";
"mime-types" -> "containers";
"mime-types" -> "text";
"monad-control" -> "base";
"monad-control" -> "stm";
"monad-control" -> "transformers";
"monad-control" -> "transformers-base";
"monad-control" -> "transformers-compat";
"monad-logger" -> "base";
"monad-logger" -> "bytestring";
"monad-logger" -> "conduit";
"monad-logger" -> "conduit-extra";
"monad-logger" -> "exceptions";
"monad-logger" -> "fast-logger";
"monad-logger" -> "lifted-base";
"monad-logger" -> "monad-control";
"monad-logger" -> "monad-loops";
"monad-logger" -> "mtl";
"monad-logger" -> "resourcet";
"monad-logger" -> "stm";
"monad-logger" -> "stm-chans";
"monad-logger" -> "template-haskell";
"monad-logger" -> "text";
"monad-logger" -> "transformers";
"monad-logger" -> "transformers-base";
"monad-logger" -> "transformers-compat";
"monad-logger" -> "unliftio-core";
"monad-loops" -> "base";
"mono-traversable" -> "base";
"mono-traversable" -> "bytestring";
"mono-traversable" -> "containers";
"mono-traversable" -> "hashable";
"mono-traversable" -> "split";
"mono-traversable" -> "text";
"mono-traversable" -> "transformers";
"mono-traversable" -> "unordered-containers";
"mono-traversable" -> "vector";
"mono-traversable" -> "vector-algorithms";
"mtl" -> "base";
"mtl" -> "transformers";
"mustache" -> "aeson";
"mustache" -> "base";
"mustache" -> "bytestring";
"mustache" -> "cmdargs";
"mustache" -> "containers";
"mustache" -> "directory";
"mustache" -> "either";
"mustache" -> "filepath";
"mustache" -> "mtl";
"mustache" -> "parsec";
"mustache" -> "scientific";
"mustache" -> "template-haskell";
"mustache" -> "text";
"mustache" -> "th-lift";
"mustache" -> "unordered-containers";
"mustache" -> "vector";
"mustache" -> "yaml";
"network" -> "base";
"network" -> "bytestring";
"network" -> "deepseq";
"network-byte-order" -> "base";
"network-byte-order" -> "bytestring";
"network-conduit-tls" -> "base";
"network-conduit-tls" -> "bytestring";
"network-conduit-tls" -> "conduit";
"network-conduit-tls" -> "conduit-extra";
"network-conduit-tls" -> "connection";
"network-conduit-tls" -> "data-default-class";
"network-conduit-tls" -> "network";
"network-conduit-tls" -> "streaming-commons";
"network-conduit-tls" -> "tls";
"network-conduit-tls" -> "transformers";
"network-conduit-tls" -> "unliftio-core";
"network-uri" -> "base";
"network-uri" -> "deepseq";
"network-uri" -> "parsec";
"network-uri" -> "template-haskell";
"old-locale" -> "base";
"old-time" -> "base";
"old-time" -> "old-locale";
"optparse-applicative" -> "ansi-wl-pprint";
"optparse-applicative" -> "base";
"optparse-applicative" -> "process";
"optparse-applicative" -> "transformers";
"optparse-applicative" -> "transformers-compat";
"parallel" -> "array";
"parallel" -> "base";
"parallel" -> "containers";
"parallel" -> "deepseq";
"parallel" -> "ghc-prim";
"parsec" -> "base";
"parsec" -> "bytestring";
"parsec" -> "mtl";
"parsec" -> "text";
"pem" -> "base";
"pem" -> "basement";
"pem" -> "bytestring";
"pem" -> "memory";
"pretty" -> "base";
"pretty" -> "deepseq";
"pretty" -> "ghc-prim";
"primitive" -> "base";
"primitive" -> "ghc-prim";
"primitive" -> "transformers";
"process" -> "base";
"process" -> "deepseq";
"process" -> "directory";
"process" -> "filepath";
"process" -> "unix";
"profunctors" -> "base";
"profunctors" -> "base-orphans";
"profunctors" -> "bifunctors";
"profunctors" -> "comonad";
"profunctors" -> "contravariant";
"profunctors" -> "distributive";
"profunctors" -> "tagged";
"profunctors" -> "transformers";
"psqueues" -> "base";
"psqueues" -> "deepseq";
"psqueues" -> "ghc-prim";
"psqueues" -> "hashable";
"random" -> "base";
"random" -> "time";
"reflection" -> "base";
"reflection" -> "template-haskell";
"resourcet" -> "base";
"resourcet" -> "containers";
"resourcet" -> "exceptions";
"resourcet" -> "mtl";
"resourcet" -> "primitive";
"resourcet" -> "transformers";
"resourcet" -> "unliftio-core";
"safe" -> "base";
"scientific" -> "base";
"scientific" -> "binary";
"scientific" -> "bytestring";
"scientific" -> "containers";
"scientific" -> "deepseq";
"scientific" -> "hashable";
"scientific" -> "integer-gmp";
"scientific" -> "integer-logarithms";
"scientific" -> "primitive";
"scientific" -> "text";
"semigroupoids" -> "Cabal";
"semigroupoids" -> "base";
"semigroupoids" -> "base-orphans";
"semigroupoids" -> "bifunctors";
"semigroupoids" -> "cabal-doctest";
"semigroupoids" -> "comonad";
"semigroupoids" -> "containers";
"semigroupoids" -> "contravariant";
"semigroupoids" -> "distributive";
"semigroupoids" -> "hashable";
"semigroupoids" -> "tagged";
"semigroupoids" -> "template-haskell";
"semigroupoids" -> "transformers";
"semigroupoids" -> "transformers-compat";
"semigroupoids" -> "unordered-containers";
"semigroups" -> "base";
"simple-sendfile" -> "base";
"simple-sendfile" -> "bytestring";
"simple-sendfile" -> "network";
"simple-sendfile" -> "unix";
"socks" -> "base";
"socks" -> "basement";
"socks" -> "bytestring";
"socks" -> "cereal";
"socks" -> "network";
"split" -> "base";
"stm" -> "array";
"stm" -> "base";
"stm-chans" -> "Cabal";
"stm-chans" -> "base";
"stm-chans" -> "stm";
"streaming-commons" -> "array";
"streaming-commons" -> "async";
"streaming-commons" -> "base";
"streaming-commons" -> "bytestring";
"streaming-commons" -> "directory";
"streaming-commons" -> "network";
"streaming-commons" -> "process";
"streaming-commons" -> "random";
"streaming-commons" -> "stm";
"streaming-commons" -> "text";
"streaming-commons" -> "transformers";
"streaming-commons" -> "unix";
"streaming-commons" -> "zlib";
"syb" -> "base";
"tagged" -> "base";
"tagged" -> "deepseq";
"tagged" -> "template-haskell";
"tagged" -> "transformers";
"template-haskell" -> "base";
"template-haskell" -> "ghc-boot-th";
"template-haskell" -> "pretty";
"terminfo" -> "base";
"text" -> "array";
"text" -> "base";
"text" -> "binary";
"text" -> "bytestring";
"text" -> "deepseq";
"text" -> "ghc-prim";
"text" -> "integer-gmp";
"text" -> "template-haskell";
"text-icu" -> "base";
"text-icu" -> "bytestring";
"text-icu" -> "deepseq";
"text-icu" -> "text";
"th-abstraction" -> "base";
"th-abstraction" -> "containers";
"th-abstraction" -> "ghc-prim";
"th-abstraction" -> "template-haskell";
"th-expand-syns" -> "base";
"th-expand-syns" -> "containers";
"th-expand-syns" -> "syb";
"th-expand-syns" -> "template-haskell";
"th-lift" -> "base";
"th-lift" -> "ghc-prim";
"th-lift" -> "template-haskell";
"th-lift" -> "th-abstraction";
"th-lift-instances" -> "base";
"th-lift-instances" -> "bytestring";
"th-lift-instances" -> "containers";
"th-lift-instances" -> "template-haskell";
"th-lift-instances" -> "text";
"th-lift-instances" -> "th-lift";
"th-lift-instances" -> "transformers";
"th-lift-instances" -> "vector";
"th-orphans" -> "base";
"th-orphans" -> "mtl";
"th-orphans" -> "template-haskell";
"th-orphans" -> "th-lift";
"th-orphans" -> "th-lift-instances";
"th-orphans" -> "th-reify-many";
"th-reify-many" -> "base";
"th-reify-many" -> "containers";
"th-reify-many" -> "mtl";
"th-reify-many" -> "safe";
"th-reify-many" -> "template-haskell";
"th-reify-many" -> "th-expand-syns";
"time" -> "base";
"time" -> "deepseq";
"time-compat" -> "base";
"time-compat" -> "base-orphans";
"time-compat" -> "deepseq";
"time-compat" -> "time";
"time-locale-compat" -> "base";
"time-locale-compat" -> "time";
"time-manager" -> "auto-update";
"time-manager" -> "base";
"tls" -> "asn1-encoding";
"tls" -> "asn1-types";
"tls" -> "async";
"tls" -> "base";
"tls" -> "bytestring";
"tls" -> "cereal";
"tls" -> "cryptonite";
"tls" -> "data-default-class";
"tls" -> "hourglass";
"tls" -> "memory";
"tls" -> "mtl";
"tls" -> "network";
"tls" -> "transformers";
"tls" -> "x509";
"tls" -> "x509-store";
"tls" -> "x509-validation";
"tls-session-manager" -> "auto-update";
"tls-session-manager" -> "base";
"tls-session-manager" -> "basement";
"tls-session-manager" -> "bytestring";
"tls-session-manager" -> "clock";
"tls-session-manager" -> "memory";
"tls-session-manager" -> "psqueues";
"tls-session-manager" -> "tls";
"transformers" -> "base";
"transformers-base" -> "base";
"transformers-base" -> "base-orphans";
"transformers-base" -> "stm";
"transformers-base" -> "transformers";
"transformers-base" -> "transformers-compat";
"transformers-compat" -> "base";
"transformers-compat" -> "ghc-prim";
"transformers-compat" -> "transformers";
"type-equality" -> "base";
"typed-process" -> "async";
"typed-process" -> "base";
"typed-process" -> "bytestring";
"typed-process" -> "process";
"typed-process" -> "stm";
"typed-process" -> "transformers";
"typed-process" -> "unliftio-core";
"unix" -> "base";
"unix" -> "bytestring";
"unix" -> "time";
"unix-compat" -> "base";
"unix-compat" -> "unix";
"unix-time" -> "base";
"unix-time" -> "binary";
"unix-time" -> "bytestring";
"unix-time" -> "old-time";
"unliftio-core" -> "base";
"unliftio-core" -> "transformers";
"unordered-containers" -> "base";
"unordered-containers" -> "deepseq";
"unordered-containers" -> "hashable";
"uuid-types" -> "base";
"uuid-types" -> "binary";
"uuid-types" -> "bytestring";
"uuid-types" -> "deepseq";
"uuid-types" -> "hashable";
"uuid-types" -> "random";
"uuid-types" -> "text";
"vault" -> "base";
"vault" -> "containers";
"vault" -> "hashable";
"vault" -> "semigroups";
"vault" -> "unordered-containers";
"vector" -> "base";
"vector" -> "deepseq";
"vector" -> "ghc-prim";
"vector" -> "primitive";
"vector-algorithms" -> "base";
"vector-algorithms" -> "bytestring";
"vector-algorithms" -> "primitive";
"vector-algorithms" -> "vector";
"void" -> "base";
"wai" -> "base";
"wai" -> "bytestring";
"wai" -> "http-types";
"wai" -> "network";
"wai" -> "text";
"wai" -> "transformers";
"wai" -> "vault";
"warp" -> "array";
"warp" -> "async";
"warp" -> "auto-update";
"warp" -> "base";
"warp" -> "bsb-http-chunked";
"warp" -> "bytestring";
"warp" -> "case-insensitive";
"warp" -> "containers";
"warp" -> "ghc-prim";
"warp" -> "hashable";
"warp" -> "http-date";
"warp" -> "http-types";
"warp" -> "http2";
"warp" -> "iproute";
"warp" -> "network";
"warp" -> "simple-sendfile";
"warp" -> "stm";
"warp" -> "streaming-commons";
"warp" -> "text";
"warp" -> "time-manager";
"warp" -> "unix";
"warp" -> "unix-compat";
"warp" -> "vault";
"warp" -> "wai";
"warp" -> "word8";
"warp" -> "x509";
"warp-tls" -> "base";
"warp-tls" -> "bytestring";
"warp-tls" -> "cryptonite";
"warp-tls" -> "data-default-class";
"warp-tls" -> "network";
"warp-tls" -> "streaming-commons";
"warp-tls" -> "tls";
"warp-tls" -> "tls-session-manager";
"warp-tls" -> "wai";
"warp-tls" -> "warp";
"websockets" -> "SHA";
"websockets" -> "async";
"websockets" -> "attoparsec";
"websockets" -> "base";
"websockets" -> "base64-bytestring";
"websockets" -> "binary";
"websockets" -> "bytestring";
"websockets" -> "bytestring-builder";
"websockets" -> "case-insensitive";
"websockets" -> "clock";
"websockets" -> "containers";
"websockets" -> "entropy";
"websockets" -> "network";
"websockets" -> "random";
"websockets" -> "streaming-commons";
"websockets" -> "text";
"word8" -> "base";
"wreq" -> "Cabal";
"wreq" -> "aeson";
"wreq" -> "attoparsec";
"wreq" -> "authenticate-oauth";
"wreq" -> "base";
"wreq" -> "base16-bytestring";
"wreq" -> "bytestring";
"wreq" -> "cabal-doctest";
"wreq" -> "case-insensitive";
"wreq" -> "containers";
"wreq" -> "cryptonite";
"wreq" -> "exceptions";
"wreq" -> "ghc-prim";
"wreq" -> "hashable";
"wreq" -> "http-client";
"wreq" -> "http-client-tls";
"wreq" -> "http-types";
"wreq" -> "lens";
"wreq" -> "lens-aeson";
"wreq" -> "memory";
"wreq" -> "mime-types";
"wreq" -> "psqueues";
"wreq" -> "template-haskell";
"wreq" -> "text";
"wreq" -> "time";
"wreq" -> "time-locale-compat";
"wreq" -> "unordered-containers";
"wuss" -> "base";
"wuss" -> "bytestring";
"wuss" -> "connection";
"wuss" -> "network";
"wuss" -> "websockets";
"x509" -> "asn1-encoding";
"x509" -> "asn1-parse";
"x509" -> "asn1-types";
"x509" -> "base";
"x509" -> "bytestring";
"x509" -> "containers";
"x509" -> "cryptonite";
"x509" -> "hourglass";
"x509" -> "memory";
"x509" -> "mtl";
"x509" -> "pem";
"x509-store" -> "asn1-encoding";
"x509-store" -> "asn1-types";
"x509-store" -> "base";
"x509-store" -> "bytestring";
"x509-store" -> "containers";
"x509-store" -> "cryptonite";
"x509-store" -> "directory";
"x509-store" -> "filepath";
"x509-store" -> "mtl";
"x509-store" -> "pem";
"x509-store" -> "x509";
"x509-system" -> "base";
"x509-system" -> "bytestring";
"x509-system" -> "containers";
"x509-system" -> "directory";
"x509-system" -> "filepath";
"x509-system" -> "mtl";
"x509-system" -> "pem";
"x509-system" -> "process";
"x509-system" -> "x509";
"x509-system" -> "x509-store";
"x509-validation" -> "asn1-encoding";
"x509-validation" -> "asn1-types";
"x509-validation" -> "base";
"x509-validation" -> "bytestring";
"x509-validation" -> "containers";
"x509-validation" -> "cryptonite";
"x509-validation" -> "data-default-class";
"x509-validation" -> "hourglass";
"x509-validation" -> "memory";
"x509-validation" -> "mtl";
"x509-validation" -> "pem";
"x509-validation" -> "x509";
"x509-validation" -> "x509-store";
"yaml" -> "aeson";
"yaml" -> "attoparsec";
"yaml" -> "base";
"yaml" -> "bytestring";
"yaml" -> "conduit";
"yaml" -> "containers";
"yaml" -> "directory";
"yaml" -> "filepath";
"yaml" -> "libyaml";
"yaml" -> "mtl";
"yaml" -> "resourcet";
"yaml" -> "scientific";
"yaml" -> "template-haskell";
"yaml" -> "text";
"yaml" -> "transformers";
"yaml" -> "unordered-containers";
"yaml" -> "vector";
"zlib" -> "base";
"zlib" -> "bytestring";
}
